version: "3"

networks:
  web:
    external: true
  internal:
    external: false
    
services:

  portfolio:
    image: cedricmarinot/docker-portfolio
    container_name: portfolio
    restart: unless-stopped
    labels:
      - traefik.http.routers.portfolio.rule=Host(`cedricmarinot.fr`)
      - traefik.http.routers.portfolio.tls=true
      - traefik.http.routers.portfolio.tls.certresolver=lets-encrypt
      - traefik.port=80
    networks:
      - internal
      - web
     
  tethys:
    image: cedricmarinot/docker-tethys
    container_name: tethys
    restart: unless-stopped
    labels:
      - traefik.http.routers.tethys.rule=Host(`tethys.cedricmarinot.fr`)
      - traefik.http.routers.tethys.tls=true
      - traefik.http.routers.tethys.tls.certresolver=lets-encrypt
      - traefik.port=80
    networks:
      - internal
      - web
    
  livechat:
    image: cedricmarinot/docker-livechat
    container_name: livechat
    restart: unless-stopped
    labels:
      - traefik.http.routers.livechat.rule=Host(`livechat.cedricmarinot.fr`)
      - traefik.http.routers.livechat.tls=true
      - traefik.http.routers.livechat.tls.certresolver=lets-encrypt
      - traefik.port=80
    networks:
      - internal
      - web

  reverse-proxy:
    image: traefik:v2.6
    container_name: traefik
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/traefik/traefik.toml:/traefik.toml
      - /root/traefik/traefik_dynamic.toml:/traefik_dynamic.toml
      - /root/traefik/acme.json:/acme.json
